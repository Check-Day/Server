# @format

name: Build Packer App and AMI
"on":
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  packer-build:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18.x
    env:
      ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2
      - run: npm i
      - name: "Using, Node, Express, and Sequelize"
        uses: actions/setup-node@v2
        with:
          node-version: "${{ matrix.node-version }}"
          cache: npm
      - name: Install Packer
        run: >
          curl -SL
          https://releases.hashicorp.com/packer/1.4.2/packer_1.4.2_linux_amd64.zip
          -o packer_1.4.2_linux_amd64.zip

          unzip -o packer_1.4.2_linux_amd64.zip -d /tmp

          sudo mv /tmp/packer /usr/bin/packer

          packer --version
      - name: Create server.zip
        run: |
          zip -r server.zip .
      - name: Initialize Packer Configuration and Format packer file
        run: |
          packer init packer/checkday.pkr.hcl
          packer fmt packer/checkday.pkr.hcl
      - name: Validate Packer Configuration
        run: |
          packer validate packer/checkday.pkr.hcl
      - name: Build Amazon Machine Image
        run: |
          packer build packer/checkday.pkr.hcl
      - name: Login to DockerHub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - name: Setup AWS CLI
        run: |
          sudo apt-get update && sudo apt-get install awscli
          aws configure set aws_access_key_id $ACCESS_KEY
          aws configure set aws_secret_access_key $SECRET_KEY
          aws configure set default.region $AWS_REGION
      - name: Setup Docker Client
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 467465390813.dkr.ecr.us-east-1.amazonaws.com
      - name: Build Docker Image
        run: docker-compose build
      - name: Tagging Image
        run: docker tag 467465390813.dkr.ecr.us-east-1.amazonaws.com/checkday:latest 467465390813.dkr.ecr.us-east-1.amazonaws.com/checkday:checkday-image
      - name: Push Docker Image to ECR
        run: docker push 467465390813.dkr.ecr.us-east-1.amazonaws.com/checkday:checkday-image
      - name: Tagging Image
        run: docker tag 467465390813.dkr.ecr.us-east-1.amazonaws.com/checkday:checkday saitejsunkara/checkday:checkday
      - name: Push Docker Image to Docker Hub
        run: docker push saitejsunkara/checkday:checkday
